<template>
  <div class="app-container">
    <!-- 搜索栏 -->
    <el-form :model="queryParams.t" label-position="left" ref="queryForm" size="small" :inline="true" v-show="showSearch"
      label-width="auto">
#foreach ($column in $columns)
#if($column.columnName != "id" && $column.columnName != "deleted" && $column.columnName != "create_by" && $column.columnName != "create_time" && $column.columnName != "update_by" && $column.columnName != "update_time")
#if($column.columnName == "operator_id")
      <el-form-item label="租户公司" prop="operatorId">
        <el-select clearable v-model="queryParams.t.operatorId" placeholder="请选择租户公司" style="width: 220px;">
          <el-option v-for="item in operators" :key="item.value" :label="item.label" :value="item.value">
          </el-option>
        </el-select>
      </el-form-item>
#elseif($column.columnName == "status")
      <el-form-item label="$column.comments" prop="status">
        <el-select v-model="queryParams.t.status" placeholder="$column.comments" clearable style="width: 220px;">
          <el-option v-for="dict in dict.type.StatusEnum" :key="dict.value" :label="dict.label"
                   :value="dict.value" />
        </el-select>
      </el-form-item>
#else
      <el-form-item label="$column.comments" prop="$column.attrname">
        <el-input v-model="queryParams.t.$column.attrname" placeholder="请输入$column.comments" clearable style="width: 220px;" />
      </el-form-item>
#end
#end
#end
    </el-form>

    <!-- 操作栏 -->
    <el-row :gutter="10" class="mb5">
      <el-col :span="1.5">
        <el-button type="primary" plain icon="el-icon-plus" size="mini" @click="handleAdd" v-hasPerms="['${moduleName}:${classname}:add']">新增</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button type="success" plain icon="el-icon-edit" size="mini" :disabled="single"
          @click="handleUpdate"  v-hasPerms="['${moduleName}:${classname}:update']">修改</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button type="danger" plain icon="el-icon-delete" size="mini" :disabled="multiple"
          @click="handleDelete" v-hasPerms="['${moduleName}:${classname}:delete']">删除</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button type="warning" plain icon="el-icon-download" size="mini" @click="handleExport" v-hasPerms="['${moduleName}:${classname}:export']">导出</el-button>
      </el-col>
      <right-toolbar :showSearch.sync="showSearch" :searching="searching" @handleQuery="getList"
                     @resetQuery="resetQuery" />
    </el-row>

    <!-- 表格 -->
    <div class="componentTable" style="height: calc(100vh - 220px)">
      <TablePlus ref="tables" :data="list" :columns="columns" v-loading="loading" @handleDelete="handleDelete"
        @handleSelectionChange="handleSelectionChange" actionWidth="80px" @sort-change="handleSortChange"
        :defaultSort="defaultSort" >
        <template slot-scope="scope" slot="status">
            <dict-tag :options="dict.type.StatusEnum" :value="scope.row.status" />
          </template>
      </TablePlus>
    </div>

    <!-- 分页器 -->
    <pagination v-show="total > 0" :total="total" :page.sync="queryParams.pageNum" :limit.sync="queryParams.pageSize"
      @pagination="getList" />

    <!-- 新增or删除 -->
    <el-dialog center :lock-scroll="true" :title="title" :visible.sync="open" width="700px" append-to-body
      :close-on-click-modal="false">
      <el-form ref="form" :model="form" label-width="110px" size="small" :rules="rules">
#foreach ($column in $columns)
#if($column.columnName != "id" && $column.columnName != "deleted" && $column.columnName != "create_by" && $column.columnName != "create_time" && $column.columnName != "update_by" && $column.columnName != "update_time")
#if($column.columnName == "operator_id")
        <el-form-item label="租户公司" prop="operatorId">
          <el-select clearable v-model="form.operatorId" placeholder="请选择租户公司" style="width: 100%;">
             <el-option v-for="item in operators" :key="item.value" :label="item.label" :value="item.value">
            </el-option>
          </el-select>
         </el-form-item>
#elseif($column.columnName == "status")
        <el-form-item label="$column.comments" prop="status">
          <el-radio-group v-model="form.status">
            <el-radio v-for="dict in dict.type.StatusEnum" :key="dict.value" :label="dict.value">{{ dict.label
              }}</el-radio>
          </el-radio-group>
        </el-form-item>
#else
        <el-form-item label="$column.comments" prop="$column.attrname">
          <el-input v-model="form.$column.attrname" placeholder="请输入$column.comments" #if($column.columnLength != 'null')maxlength="$column.columnLength"#end show-word-limit clearable/>
        </el-form-item>
#end
#end
#end
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" :loading="dialogLoading" @click="submitForm">确 定</el-button>
        <el-button @click="cancel">取 消</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { pageList, add${className}, queryById, update${className}, delete${className} } from '@/api/${classname}/${classname}.js';
import serviceConfig from '@/api/serviceConfig'
#if($operatorId)
import { operators } from '@/api/common.js'
#end

export default {
  name: '${className}',
  dicts: ['StatusEnum'],
  data() {
    return {
      searching: false,
      uploading: false,
      dialogLoading:false,
      loading: false,
      total: 0,
      showSearch: true,
      open: false,
      multiple: true,
      single: true,
      list: [],
      title: '',
#if($operatorId)
      operators: [],
#end
      ids: [],
      defaultSort: {
        prop: 'createTime',
        order: 'descending'
      },
      dateRange: [],
      queryParams: {
        pageNum: 1,
        pageSize: 20,
        sortList: [],
        t: {
#foreach ($column in $columns)
#if($column.columnName != "id" && $column.columnName != "deleted" && $column.columnName != "create_by" && $column.columnName != "create_time" && $column.columnName != "update_by" && $column.columnName != "update_time")
          $column.attrname: undefined,
#end
#end
        }
      },
      form: {
#foreach ($column in $columns)
#if($column.columnName != "deleted" && $column.columnName != "create_by" && $column.columnName != "create_time" && $column.columnName != "update_by" && $column.columnName != "update_time")
        $column.attrname: undefined,
#end
#end
      },

      rules: {
#foreach ($column in $columns)
#if($column.isNullable != 'NO' && $column.columnName != "id" && $column.columnName != "deleted" && $column.columnName != "create_time" && $column.columnName != "update_time" && $column.columnName != "create_by" && $column.columnName != "update_by")
        $column.attrname: [
          { required: true, message: "$column.comments不能为空", trigger: "blur" },
#if($column.columnLength != 'null')
          { max: $column.columnLength, message: '$column.comments长度必须小于$column.columnLength个字符', trigger: 'blur' }
#end
        ],
#end
#end
      },
      columns: [
#foreach ($column in $columns)
#if($column.columnName != "deleted")
        {
          attrs: {
            label: "$column.comments",
            prop: "$column.attrname",
            minWidth: "140",
            align: "center",
#if($column.columnName == "create_time" || $column.columnName == "update_time")
            sortable: 'custom',
#end
          },
        },
#end
#end
      ],
    }
  },
  created() {
    this.getList();
#if($operatorId)
    this.getOperators();
#end
  },
  methods: {
#if($operatorId)
    getOperators() {
      operators().then((res) => {
        this.operators = res.data
      })
    },
#end
    handleSortChange(sortProp) {
      this.queryParams.sortList = [];
      this.queryParams.sortList.push({ orderByColumn: sortProp.prop, sortType: sortProp.order });
      this.getList();
    },
    getList() {
      this.loading = true;
      this.searching = true;
      //添加默认排序
      if (this.queryParams.sortList.length == 0) {
        this.queryParams.sortList.push({ orderByColumn: this.defaultSort.prop, sortType: this.defaultSort.order });
      }
      pageList(this.queryParams).then((resp) => {
        this.list = resp.data.list;
        this.total = resp.data.total;
        this.loading = false;
        this.searching = false;
      }).catch((err) => {
        this.loading = false;
        this.searching = false;
      });
    },
    handleSelectionChange(selection) {
      this.ids = selection.map(item => item.id)
      this.single = selection.length != 1
      this.multiple = !selection.length
    },
    handleQuery() {
      this.queryParams.pageNum = 1;
      this.getList();
    },
    resetQuery() {
      this.resetForm("queryForm");
      //清除排序（默认自动排序的列）
   #[[this.$refs.tables.$refs.tablePlus.sort(this.defaultSort.prop, this.defaultSort.order);]]#
    },
    handleAdd() {
      this.reset();
      this.open = true;
      this.title = '新增${comments}'
    },
    handleUpdate(row) {
      this.reset();
      this.title = '编辑${comments}'
      this.open = true
      let id = row.id || this.ids;
      queryById(id).then((res) => {
        this.form = res.data;
      });
    },
    handleExport() {
      let name = '${comments}_' + this.parseTime(new Date(), '{y}{m}{d}{h}{i}{s}') + '.xlsx';
      this.download(serviceConfig.system + '/${pathName}/export', this.queryParams, name)
    },
    handleDelete(row) {
      const idList = row.id || this.ids;
      #[[this.$modal.confirm('是否确认删除编号为[' + idList + ']的数据项？').then(function () {]]#
        return delete${className}(idList);
      }).then(() => {
        this.getList();
        this.$modal.msgSuccess("删除成功");
      }).catch(() => { });
    },
    submitForm() {
      #[[this.$refs["form"].validate((valid) => {]]#
        if (valid) {
          this.dialogLoading = true;
          if (this.form.id != undefined) {
            //console.log('表单数据', this.form)
            //编辑
            update${className}(this.form).then((res) => {
              this.$modal.msgSuccess("修改成功");
              this.open = false;
              this.dialogLoading = false
              this.getList();
            }).catch(err=>{
              this.dialogLoading = false
            })
          } else {
            //新增
            add${className}(this.form).then((res) => {
              this.$modal.msgSuccess("新增成功");
              this.open = false;
              this.dialogLoading = false
              this.getList();
            }).catch(err=>{
              this.dialogLoading = false
            })
          }
        }
      })
    },
    cancel() {
      this.open = false;
      this.reset();
    },
    // 表单重置
    reset() {
      this.dialogLoading = false;
      this.form = {
#foreach ($column in $columns)
#if($column.columnName != "deleted" && $column.columnName != "create_by" && $column.columnName != "create_time" && $column.columnName != "update_by" && $column.columnName != "update_time")
        $column.attrname: undefined,
#end
#end
      };
      this.resetForm("form");
    },
  },
}
</script>

#[[<style lang="scss" scoped></style>]]#