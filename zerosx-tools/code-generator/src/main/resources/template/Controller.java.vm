package ${package}.${moduleName}.controller;

import com.zerosx.common.core.vo.CustomPageVO;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.validation.annotation.Validated;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.Operation;
import lombok.extern.slf4j.Slf4j;
import com.zerosx.common.base.utils.ResultVOUtil;
import com.zerosx.common.base.vo.RequestVO;
import com.zerosx.common.base.vo.ResultVO;
import com.zerosx.common.core.interceptor.ZerosSecurityContextHolder;
import com.zerosx.common.core.utils.BeanCopierUtil;
import com.zerosx.common.core.easyexcel.EasyExcelUtil;
import com.zerosx.common.log.annotation.SystemLog;
import com.zerosx.common.log.enums.BusinessType;

import ${package}.${moduleName}.vo.${className}PageVO;
import ${package}.${moduleName}.dto.${className}PageDTO;
import ${package}.${moduleName}.dto.${className}DTO;
import ${package}.${moduleName}.vo.${className}VO;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.I${className}Service;

import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;

/**
 * ${comments}
 * @Description
 * @author ${author}
 * @date ${datetime}
 */
@Slf4j
@RestController
@Tag(name = "${comments}")
public class ${className}Controller {

    @Autowired
    private I${className}Service ${classname}Service;

    @Operation(summary ="分页列表")
    @SystemLog(title = "${comments}", btnName = "分页查询", businessType= BusinessType.QUERY)
    @PostMapping("/${pathName}/page_list")
    public ResultVO<CustomPageVO<${className}PageVO>> pageList(@RequestBody RequestVO<${className}PageDTO> requestVO){
        return ResultVOUtil.success(${classname}Service.pageList(requestVO, true));
    }

    @Operation(summary ="新增")
    @SystemLog(title = "${comments}", btnName = "新增", businessType= BusinessType.INSERT)
    @PostMapping("/${pathName}/save")
    public ResultVO<?> add(@Validated @RequestBody ${className}DTO ${classname}DTO) {
        return ResultVOUtil.successBoolean(${classname}Service.add(${classname}DTO));
    }

    @Operation(summary ="编辑")
    @SystemLog(title = "${comments}", btnName = "编辑", businessType= BusinessType.UPDATE)
    @PostMapping("/${pathName}/update")
    public ResultVO<?> update(@Validated @RequestBody ${className}DTO ${classname}DTO) {
        return ResultVOUtil.successBoolean(${classname}Service.update(${classname}DTO));
    }

    @Operation(summary ="按id查询")
    @GetMapping("/${pathName}/queryById/{id}")
    public ResultVO<${className}VO> queryById(@PathVariable Long id) {
        return ResultVOUtil.success(${classname}Service.queryById(id));
    }

    @Operation(summary ="删除")
    @SystemLog(title = "${comments}", btnName = "删除", businessType= BusinessType.DELETE)
    @DeleteMapping("/${pathName}/delete/{${pk.attrname}s}")
    public ResultVO<?> deleteRecord(@PathVariable("${pk.attrname}s") Long[] ${pk.attrname}s){
        return ResultVOUtil.successBoolean(${classname}Service.deleteRecord(${pk.attrname}s));
    }

    @Operation(summary = "导出")
    @SystemLog(title = "${comments}", btnName = "导出", businessType= BusinessType.EXPORT)
    @PostMapping("/${pathName}/export")
    public void operatorExport(@RequestBody RequestVO<${className}PageDTO> requestVO, HttpServletResponse response) throws IOException {
        long t1 = System.currentTimeMillis();
        CustomPageVO<${className}PageVO> pages = ${classname}Service.pageList(requestVO, false);
        EasyExcelUtil.writeExcel(response, pages.getList(), ${className}PageVO.class);
        log.debug("【{}】执行导出{}条 耗时:{}ms", ZerosSecurityContextHolder.getUserName(), pages.getTotal(), System.currentTimeMillis() - t1);
    }

}
