<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <contextName>${APP_NAME}</contextName>

    <springProperty scope="context" name="APP_NAME" source="spring.application.name"/>
    <!-- 单个日志文件的大小 -->
    <springProperty scope="context" name="MAX_FILE_SIZE" source="logging.logback.rollingpolicy.max-file-size"
                    defaultValue="1GB"/>
    <!-- 日志保留时长 (天) -->
    <springProperty scope="context" name="MAX_HISTORY" source="logging.logback.rollingpolicy.max-history"
                    defaultValue="30"/>
    <!--自定义日志总体的大小，超过将删除最旧的日志存档-->
    <springProperty scope="context" name="LOG_TOTAL_SIZE_CAP" source="logging.logback.rollingpolicy.total-size-cap"
                    defaultValue="10GB"/>
    <!-- 日志文件路径 -->
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 ${user.home}/logs/${APP_NAME} -->
    <springProperty scope="context" name="LOG_HOME" source="logging.file.path"
                    defaultValue="${user.home}/zerosx-cloud/logs/${APP_NAME}"/>
    <!-- 应用启动IP -->
    <springProperty name="ServerIP" scope="context" source="spring.cloud.client.ip-address" defaultValue="0.0.0.0"/>
    <!-- 应用启动端口 -->
    <springProperty name="ServerPort" scope="context" source="server.port" defaultValue="0000"/>

    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!-- 彩色日志格式 -->
    <!--<property name="CONSOLE_LOG_PATTERN_COLOR"
              value="[${APP_NAME}:${ServerIP}:${ServerPort}] %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%level){blue} %clr(${PID}){magenta} %clr([%X{traceId}]){yellow} %clr([%thread]){orange} %clr(%-40.40logger{39}){cyan} [%L] %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
    <property name="CONSOLE_LOG_PATTERN_NO_COLOR"
              value="[${APP_NAME}:${ServerIP}:${ServerPort}] %d{yyyy-MM-dd HH:mm:ss.SSS} %level ${PID} [%X{traceId}] [%thread] %-40.40logger{39} [%L] %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
-->
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN_COLOR"
              value="[${APP_NAME}:${ServerIP}:${ServerPort}] %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%level){blue} %clr(${PID}){magenta} %clr([%X{traceId}-%X{spanId}]){yellow} %clr([%thread]){orange} %clr(%-40.40logger{39}){cyan} [%L] %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
    <property name="CONSOLE_LOG_PATTERN_NO_COLOR"
              value="[${APP_NAME}:${ServerIP}:${ServerPort}] %d{yyyy-MM-dd HH:mm:ss.SSS} %level ${PID} [%X{traceId}-%X{spanId}] [%thread] %-40.40logger{39} [%L] %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>

    <!-- 控制台输出设置 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN_COLOR}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志文件输出的文件名 -->
        <!--    <file>${LOG_HOME}/info.%d{yyyy-MM-dd}.log</file>-->
        <file>${LOG_HOME}/info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件压缩文件名 -->
            <FileNamePattern>${LOG_HOME}/info.%d{yyyy-MM-dd}.log.%i.gz</FileNamePattern>
            <!--日志文件保留天数 -->
            <MaxHistory>${MAX_HISTORY}</MaxHistory>
            <MaxFileSize>${MAX_FILE_SIZE}</MaxFileSize>
            <totalSizeCap>${LOG_TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>${CONSOLE_LOG_PATTERN_NO_COLOR}</pattern>
        </encoder>
    </appender>

    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志文件输出的文件名 -->
        <file>${LOG_HOME}/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件压缩文件名 -->
            <FileNamePattern>${LOG_HOME}/error.%d{yyyy-MM-dd}.log.%i.gz</FileNamePattern>
            <!--日志文件保留天数 -->
            <MaxHistory>${MAX_HISTORY}</MaxHistory>
            <MaxFileSize>${MAX_FILE_SIZE}</MaxFileSize>
            <totalSizeCap>${LOG_TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>${CONSOLE_LOG_PATTERN_NO_COLOR}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>

    <appender name="info_file_async" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <appender-ref ref="INFO"/>
    </appender>
    <appender name="error_file_async" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <appender-ref ref="ERROR"/>
    </appender>

    <!--  开发环境和测试环境，日志输出到控制台和文件  -->
    <springProfile name="local|dev">
        <!-- 日志输出级别 -->
        <root level="INFO">
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="info_file_async"/>
            <appender-ref ref="error_file_async"/>
        </root>
    </springProfile>

    <!--  生产环境，日志输出到文件  -->
    <springProfile name="prod">
        <!-- 日志输出级别 -->
        <root level="INFO">
            <appender-ref ref="info_file_async"/>
            <appender-ref ref="error_file_async"/>
        </root>
    </springProfile>

</configuration>


